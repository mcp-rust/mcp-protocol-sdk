name: Benchmarks

on:
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'benches/**'
      - 'Cargo.toml'
  pull_request:
    paths:
      - 'src/**'
      - 'benches/**'
      - 'Cargo.toml'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  benchmark:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "benchmarks"
          cache-on-failure: true

      - name: Install critcmp
        run: cargo install critcmp

      - name: Check for benchmarks
        id: check_benchmarks
        run: |
          if [ -n "$(find benches -name '*.rs' 2>/dev/null)" ]; then
            echo "benchmarks_found=true" >> $GITHUB_OUTPUT
          else
            echo "benchmarks_found=false" >> $GITHUB_OUTPUT
          fi

      - name: Run benchmarks (current)
        if: steps.check_benchmarks.outputs.benchmarks_found == 'true'
        run: |
          cargo bench --all-features -- --output-format json | tee current_bench.json

      - name: Run benchmarks (baseline)
        if: steps.check_benchmarks.outputs.benchmarks_found == 'true' && github.event_name == 'pull_request'
        run: |
          git checkout ${{ github.event.pull_request.base.sha }}
          cargo bench --all-features -- --output-format json | tee baseline_bench.json || echo "[]" > baseline_bench.json
          git checkout ${{ github.event.pull_request.head.sha }}

      - name: Compare benchmarks
        if: steps.check_benchmarks.outputs.benchmarks_found == 'true' && github.event_name == 'pull_request'
        run: |
          echo "## ðŸ“Š Benchmark Results" > benchmark_comment.md
          echo "" >> benchmark_comment.md
          
          if [ -f baseline_bench.json ] && [ -f current_bench.json ]; then
            critcmp baseline_bench.json current_bench.json >> benchmark_comment.md || echo "Unable to compare benchmarks" >> benchmark_comment.md
          else
            echo "Benchmark comparison not available" >> benchmark_comment.md
          fi
          
          echo "" >> benchmark_comment.md
          echo "View detailed results in the [workflow artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> benchmark_comment.md

      - name: Comment PR
        if: steps.check_benchmarks.outputs.benchmarks_found == 'true' && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            if (fs.existsSync('benchmark_comment.md')) {
              const comment = fs.readFileSync('benchmark_comment.md', 'utf8');
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }

      - name: Upload benchmark results
        if: steps.check_benchmarks.outputs.benchmarks_found == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: |
            current_bench.json
            baseline_bench.json
            benchmark_comment.md
          retention-days: 30

      - name: Store benchmark (main branch)
        if: steps.check_benchmarks.outputs.benchmarks_found == 'true' && github.ref == 'refs/heads/main'
        uses: benchmark-action/github-action-benchmark@v1
        with:
          tool: 'cargo'
          output-file-path: current_bench.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          comment-on-alert: true
          alert-threshold: '150%'
          fail-on-alert: false
