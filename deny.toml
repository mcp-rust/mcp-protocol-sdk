# This file is used by cargo-deny to check for security vulnerabilities,
# license compatibility, and banned dependencies.

[licenses]
# The confidence threshold for detecting a license from a license text.
# 0.8 is a good default for most cases.
confidence-threshold = 0.8

# List of allowed licenses
allow = [
    "MIT",
    "Apache-2.0",
    "Apache-2.0 WITH LLVM-exception",
    "BSD-2-Clause",
    "BSD-3-Clause",
    "ISC",
    "Unicode-DFS-2016",
]

# List of explicitly disallowed licenses
deny = [
    "GPL-2.0",
    "GPL-3.0",
    "AGPL-1.0",
    "AGPL-3.0",
]

# Lint level for when multiple versions of the same license are detected
multiple-versions = "warn"

# Confidence threshold for detecting a license from a license text.
# 0.8 is a good default for most cases.
copyleft = "warn"

# Blanket approval or denial for OSI-approved or FSF Free/Libre licenses
allow-osi-fsf-free = "both"

# Lint level used when an exception isn't found
default = "deny"

# The confidence threshold for detecting a license from a license text.
# 0.8 is a good default for most cases.
private = { ignore = true }

[bans]
# Lint level for when multiple versions of the same crate are detected
multiple-versions = "warn"

# Lint level for when a crate version requirement is `*`
wildcards = "allow"

# The graph highlighting used when creating dotgraphs for crates
# with multiple versions
# * all - all edges are highlighted
# * first-party-only - only edges to/from first-party crates are highlighted
# * none - no edges are highlighted
highlight = "all"

# List of crates that are allowed. Use with care!
allow = []

# List of crates to deny
deny = [
    # Each entry can be either just the crate name, or a crate name and a
    # version requirement
    { name = "openssl", version = "*" }, # Use rustls instead
]

# Certain crates/versions that will be skipped when doing duplicate detection.
skip = [
    # { name = "winapi", version = "=0.2.8" },
]

# Similarly to `skip` allows you to skip certain crates from being checked
# for duplicates.
skip-tree = [
    # { name = "windows", version = "=0.48.0", depth = 20 },
]

[advisories]
# The path where the advisory database is cloned/fetched into
db-path = "~/.cargo/advisory-db"

# The url(s) of the advisory databases to use
db-urls = ["https://github.com/rustsec/advisory-db"]

# The lint level for security vulnerabilities
vulnerability = "deny"

# The lint level for unmaintained crates
unmaintained = "warn"

# The lint level for crates that have been yanked from their source registry
yanked = "warn"

# The lint level for crates with security notices. Note that as of
# 2019-12-17 there are no security notice advisories in
# https://github.com/rustsec/advisory-db
notice = "warn"

# A list of advisory IDs to ignore. Note that ignored advisories will still
# output a note when they are encountered.
ignore = [
    #"RUSTSEC-0000-0000",
]

[sources]
# Lint level for what to happen when a crate from a crate registry that is
# not in the allow list is encountered
unknown-registry = "warn"

# Lint level for what to happen when a crate from a git repository that is not
# in the allow list is encountered
unknown-git = "warn"

# List of allowed crate registries
allow-registry = ["https://github.com/rust-lang/crates.io-index"]

# List of allowed Git repositories
allow-git = []
